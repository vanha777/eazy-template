name: Build, Test and Deploy to Prod

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# env:
#   PORT: 3070

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for service_docurust
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DockerfileDocurust
          push: true
          tags: vanha777/service_docurust
          # build-args: |
          #   PORT=${{ secrets.PORT }}
          
      - name: Build and push Docker image for service_eazypic
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DockerfileEazypic
          push: true
          tags: vanha777/service_eazypic
          # build-args: |
          #   PHOTOSHOP_CLIENT_ID=${{ secrets.PHOTOSHOP_CLIENT_ID }}
      
      - name: Create environment file
        run: |
          echo "PHOTOSHOP_CLIENT_ID=${{ secrets.PHOTOSHOP_CLIENT_ID }}" > service_eazypic.env
          echo "PHOTOSHOP_CLIENT_SECRET=${{ secrets.PHOTOSHOP_CLIENT_SECRET }}" >> service_eazypic.env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> service_eazypic.env
          echo "HEYGEN_API_KEY=${{ secrets.HEYGEN_API_KEY }}" >> service_eazypic.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> service_eazypic.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> service_eazypic.env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> service_eazypic.env
          echo "AWS_BUCKET=${{ secrets.AWS_BUCKET }}" >> service_eazypic.env
          echo "AWS_IMAGE_KEY=${{ secrets.AWS_IMAGE_KEY }}" >> service_eazypic.env
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Copy docker-compose.yml to droplet service_docurust
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no ./services/service_docurust/docker-compose.yml root@${{ vars.DROPLET_IP_DOCURUST }}:~

      - name: Deploy service_docurust
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP_DOCURUST }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~
            docker-compose down
            docker-compose pull
            docker-compose up -d

      - name: Copy docker-compose.yml to droplet service_eazypic
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no ./services/service_eazypic/docker-compose.yml root@${{ vars.DROPLET_IP_EAZYPIC }}:~
        
      - name: Transfer .env file to the server
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no service_eazypic.env root@${{ vars.DROPLET_IP_EAZYPIC }}:~

      - name: Deploy service_eazypic
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP_EAZYPIC }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~
            docker-compose down
            docker-compose pull
            docker-compose up -d
